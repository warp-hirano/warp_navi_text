//
//  MEDIA QUERIES
//––––––––––––––––––––––––––––––––––––––––––––––––––

//
//  RESPOND ABOVE
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-above(sm) {}
@mixin respond-above($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

//
//  RESPOND BELOW
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-below(sm) {}
@mixin respond-below($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

//
//  RESPOND BETWEEN
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-between(sm, md) {}
@mixin respond-between($lower, $upper) {
  // If both the lower and upper breakpoints exist in the map.
  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
    // Get the lower and upper breakpoints.
    $lower-breakpoint: map-get($breakpoints, $lower);
    $upper-breakpoint: map-get($breakpoints, $upper);

    // Write the media query.
    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
      @content;
    }

    // If one or both of the breakpoints don't exist.
  } @else {
    // If lower breakpoint is invalid.
    @if (map-has-key($breakpoints, $lower) == false) {
      // Log a warning.
      @warn 'Your lower breakpoint was invalid: #{$lower}.';
    }

    // If upper breakpoint is invalid.
    @if (map-has-key($breakpoints, $upper) == false) {
      // Log a warning.
      @warn 'Your upper breakpoint was invalid: #{$upper}.';
    }
  }
}

.is-mobile {
  display: none !important;
}

//@media screen and (max-width: 640px) {
@include respond-below(sm) {
  .is-mobile {
    display: block !important;
  }
  .hidden-mobile {
    display: none !important;
  }
}

@include respond-below(xs) {
  .is-mobile {
    display: block;
  }
  .hidden-mobile {
    display: none !important;
  }
}

/* Portrait & landscape tablet only */
//@media screen and (min-width: 641px) and (max-width: 1024px) {
@include respond-between(sm, md) {
  .is-tablet {
    display: block;
  }
  .hidden-tablet {
    display: none !important;
  }
}

/* Desktop, smaller desktop & tablet only */
/*! Smaller desktop only */
//@media screen and (min-width: 1025px) and (max-width: 1278px) {
@include respond-between(md, lg) {
  .is-small-desktop {
    display: block;
  }
  .hidden-small-desktop {
    display: none !important;
  }
}

/*! Desktop & smaller desktop only */
//@media screen and (min-width: 1025px) {
@include respond-above(md) {
  .hidden-desktop {
    display: none !important;
  }
}

/*! Desktop only */

//@media screen and (min-width: 1279px) {
@include respond-above(lg) {
  .is-desktop {
    display: block;
  }
  .hidden-wide-desktop {
    display: none !important;
  }
}
